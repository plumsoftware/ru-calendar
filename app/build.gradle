plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
}

android {
    compileSdk 35

    defaultConfig {
        applicationId "com.plumsoftware.rucalendar"
        minSdk 21
        targetSdk 35
        versionCode 50
        versionName "4.0.4"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    namespace 'com.plumsoftware.rucalendar'

    android {
        lintOptions {
            // set to true to turn off analysis progress reporting by lint
            quiet true
            // if true, stop the gradle build if errors are found
            abortOnError false
            // set to true to have all release builds run lint on issues with severity=fatal
            // and abort the build (controlled by abortOnError above) if fatal issues are found
            checkReleaseBuilds true
            // if true, only report errors
            ignoreWarnings true
            // if true, emit full/absolute paths to files with errors (true by default)
            //absolutePaths true
            // if true, check all issues, including those that are off by default
            checkAllWarnings true
            // if true, treat all warnings as errors
            warningsAsErrors true
            // turn off checking the given issue id's
            disable 'TypographyFractions', 'TypographyQuotes'
            // turn on the given issue id's
            enable 'RtlHardcoded', 'RtlCompat', 'RtlEnabled'
            // check *only* the given issue id's
            check 'NewApi', 'InlinedApi'
            // if true, don't include source code lines in the error output
            noLines true
            // if true, show all locations for an error, do not truncate lists, etc.
            showAll true
            // whether lint should include full issue explanations in the text error output
            explainIssues false
            // Fallback lint configuration (default severities, etc.)
            lintConfig file("default-lint.xml")
            // if true, generate a text report of issues (false by default)
            textReport true
            // location to write the output; can be a file or 'stdout' or 'stderr'
            //textOutput 'stdout'
            textOutput file("lint-results.txt")
            // if true, generate an XML report for use by for example Jenkins
            xmlReport true
            // file to write report to (if not specified, defaults to lint-results.xml)
            xmlOutput file("lint-report.xml")
            // if true, generate an HTML report (with issue explanations, sourcecode, etc)
            htmlReport true
            // optional path to report (default will be lint-results.html in the builddir)
            htmlOutput file("lint-report.html")
            // Set the severity of the given issues to fatal (which means they will be
            // checked during release builds (even if the lint target is not included)
            fatal 'NewApi', 'InlineApi'
            // Set the severity of the given issues to error
            error 'Wakelock', 'TextViewEdits'
            // Set the severity of the given issues to warning
            warning 'ResourceAsColor'
            // Set the severity of the given issues to ignore (same as disabling the check)
            ignore 'TypographyQuotes'
            // Set the severity of the given issues to informational
            informational 'StopShip'
            // Use (or create) a baseline file for issues that should not be reported
            baseline file("lint-baseline.xml")
            // Normally most lint checks are not run on test sources (except the checks
            // dedicated to looking for mistakes in unit or instrumentation tests, unless
            // ignoreTestSources is true). You can turn on normal lint checking in all
            // sources with the following flag, false by default:
            checkTestSources true
            // Like checkTestSources, but always skips analyzing tests -- meaning that it
            // also ignores checks that have explicitly asked to look at test sources, such
            // as the unused resource check.
            ignoreTestSources true
            // Normally lint will skip generated sources, but you can turn it on with this flag
            checkGeneratedSources true
            // Normally lint will analyze all dependencies along with each module; this ensures
            // that lint can correctly (for example) determine if a resource declared in a library
            // is unused; checking only the library in isolation would not be able to identify this
            // problem. However, this leads to quite a bit of extra computation; a library is
            // analyzed repeatedly, for each module that it is used in.
            checkDependencies false
            disable 'MobileAdsSdkOutdatedVersion'
        }
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.firebase:firebase-messaging:23.1.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    //Multidex
    implementation 'androidx.multidex:multidex:2.0.1'

    //Calendar
    //implementation 'org.naishadhparmar.zcustomcalendar:zcustomcalendar:1.0.1'


    //noinspection MobileAdsSdkVersion
    implementation 'com.yandex.android:mobileads:7.8.0'

    //Animations
    implementation 'io.noties:tumbleweed-android:2.0.0'

    //Swipe to refresh
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    //Messaging service
    implementation platform('com.google.firebase:firebase-bom:30.2.0')
    implementation 'com.google.firebase:firebase-analytics'

    //Lottie
    def lottieVersion = "3.4.0"
    implementation "com.airbnb.android:lottie:$lottieVersion"
}